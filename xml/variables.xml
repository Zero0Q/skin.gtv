<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="version">
        <value>0.0.7~alpha</value>
    </variable>

    <!-- Progress image -->
    <variable name="ProgressImage">
        <value condition="Integer.IsEqual(ListItem.PlayCount,0) + Integer.IsEqual(ListItem.PercentPlayed,0)">overlays/unwatched/0.png</value>
        <value condition="!Integer.IsEqual(ListItem.PercentPlayed,0)">overlays/unwatched/$INFO[ListItem.PercentPlayed,,.png]</value>
    </variable>

    <!-- Return episode number with leading zero -->
    <variable name="EpsNumber">
        <value condition="String.Contains(ListItem.Episode,S)">$INFO[ListItem.Episode]</value>
        <value condition="Integer.IsLess(ListItem.Episode,10)">$INFO[ListItem.Episode,0,]</value>
        <value>$INFO[ListItem.Episode]</value>
    </variable>

    <variable name="EpsNumberForYou">
        <value condition="String.Contains(Container(4000).ListItem.Episode,S)">$INFO[Container(4000).ListItem.Episode]</value>
        <value condition="Integer.IsLess(Container(4000).ListItem.Episode,10)">$INFO[Container(4000).ListItem.Episode,0,]</value>
        <value>$INFO[Container(4000).ListItem.Episode]</value>
    </variable>

    <!-- Return track number without leading zero -->
    <variable name="TrackNumber">
        <value condition="String.IsEqual(ListItem.TrackNumber,01)">1</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,02)">2</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,03)">3</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,04)">4</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,05)">5</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,06)">6</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,07)">7</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,08)">8</value>
        <value condition="String.IsEqual(ListItem.TrackNumber,09)">9</value>
        <value>$INFO[ListItem.TrackNumber]</value>
    </variable>

    <!-- Return track duration minutes without leading zero -->
    <variable name="TrackDurationMinutes">
        <value condition="String.IsEqual(ListItem.Duration(m),01)">1</value>
        <value condition="String.IsEqual(ListItem.Duration(m),02)">2</value>
        <value condition="String.IsEqual(ListItem.Duration(m),03)">3</value>
        <value condition="String.IsEqual(ListItem.Duration(m),04)">4</value>
        <value condition="String.IsEqual(ListItem.Duration(m),05)">5</value>
        <value condition="String.IsEqual(ListItem.Duration(m),06)">6</value>
        <value condition="String.IsEqual(ListItem.Duration(m),07)">7</value>
        <value condition="String.IsEqual(ListItem.Duration(m),08)">8</value>
        <value condition="String.IsEqual(ListItem.Duration(m),09)">9</value>
        <value>$INFO[ListItem.Duration(m)]</value>
    </variable>

    <!-- Context menu title -->
    <variable name="ContextTitleVar">
        <value condition="String.IsEqual(ListItem.dbtype,season)">$INFO[ListItem.TVShowTitle] - $INFO[ListItem.Title]</value>
        <value condition="String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.season]x$VAR[EpsNumber] $INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>

    <!-- Video Library return background image to use -->
    <variable name="BackgroundImage">
        <value condition="Container.Content(actors)">$INFO[Window(home).Property(EmbuaryBackgroundVideos)]</value>
        <value condition="!Container.Content(episodes) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[Window(home).Property(EmbuaryBackgroundVideos)]</value>
    </variable>

    <variable name="BackgroundImageWithoutFallback">
        <value condition="Window.IsActive(Home.xml) + String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Container.Content(episodes) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>

    <variable name="BackgroundImageForYou">
        <value condition="Window.IsActive(Home.xml) + String.IsEqual(Container(4000).ListItem.dbtype,episode)">$INFO[Container(4000).ListItem.Art(thumb)]</value>
        <value condition="!Container.Content(episodes) + !String.IsEmpty(Container(4000).ListItem.Art(fanart))">$INFO[Container(4000).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(4000).ListItem.Art(thumb))">$INFO[Container(4000).ListItem.Art(thumb)]</value>
        <value>$INFO[Container(4000).ListItem.Art(fanart)]</value>
    </variable>

    <!-- Music Library return background image to use -->
    <variable name="BackgroundImageMusic">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[Window(home).Property(EmbuaryBackgroundVideos)]</value>
    </variable>

    <variable name="blurcolor">
        <value>$INFO[Window(home).Property(GTV.color),50]</value>
    </variable>
    <variable name="blurcolor1">
        <value>$INFO[Window(home).Property(GTV.color),60]</value>
    </variable>
    <variable name="blurcolor2">
        <value>$INFO[Window(home).Property(GTV.color),10]</value>
    </variable>

    <variable name="NumSeasons">
        <value condition="Integer.IsGreater(ListItem.Season,1)">$INFO[ListItem.Season,, seasons]</value>
        <value>$INFO[ListItem.Season,, season]</value>
    </variable>

    <variable name="PlayBrowseButton">
        <value condition="$EXP[isMovie] | $EXP[isEpisode] | $EXP[isVideo]">Play</value>
        <value condition="$EXP[isTVShow]">Browse</value>
    </variable>

    <variable name="Plot">
        <value condition="String.IsEmpty(ListItem.Plot)">No plot available.</value>
        <value>$INFO[ListItem.Plot]</value>
    </variable>

    <variable name="MPAARating">
        <value condition="String.IsEqual(ListItem.MPAA,Not Rated) | String.IsEmpty(ListItem.MPAA)">NR</value>
        <value>$INFO[ListItem.MPAA]</value>
    </variable>

    <variable name="PlayTime">
        <value condition="Integer.IsLess(Player.Duration(mins),60)">$INFO[Player.Time(mm:ss)]</value>
        <value>$INFO[Player.Time(h:mm:ss)]</value>
    </variable>

    <variable name="PlayDuration">
        <value condition="Integer.IsLess(Player.Duration(mins),60)">$INFO[Player.Duration(mm:ss)]</value>
        <value>$INFO[Player.Duration(h:mm:ss)]</value>
    </variable>

    <variable name="LibrarySectionHeader">
        <value condition="Window.IsVisible(Home.xml) + String.IsEqual(Container(4000).ListItem.dbtype,movie)">Inprogress movies</value>
        <value condition="Window.IsVisible(Home.xml) + String.IsEqual(Container(4000).ListItem.dbtype,episode)">Next episodes</value>
        <value condition="Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.TVShowTitle]</value>
        <value condition="String.Contains(Container.FolderPath,sets)">$INFO[Container.FolderName]</value>
        <value condition="String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,set)">Your movies</value>
        <value condition="String.IsEqual(ListItem.dbtype,set) ">$INFO[ListItem.Set]</value>
        <value condition="String.IsEqual(ListItem.dbtype,tvshow)">Your shows</value>
    </variable>

    <variable name="WidgetTitle">
        <value condition="Control.Isvisible(4500)">$INFO[ListItem.label]</value>

        <value condition="Window.IsVisible(DialogVideoInfo.xml) + String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.season]x$VAR[EpsNumber] $INFO[ListItem.title]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml)">$INFO[ListItem.Title]</value>

        <value condition="Window.IsVisible(Home.xml) + String.IsEqual(Container(4000).ListItem.dbtype,episode)">$INFO[Container(4000).ListItem.season]x$VAR[EpsNumberForYou] $INFO[Container(4000).ListItem.title]</value>
        <value condition="String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.season]x$VAR[EpsNumber] $INFO[ListItem.title]</value>

        <value condition="Window.IsVisible(Home.xml)">$INFO[Container(4000).ListItem.Title]</value>

        <value>$INFO[ListItem.Title]</value>
    </variable>

    <variable name="AlbumArtist1">
        <value condition="Container.Content(albums)">$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.label]</value>
    </variable>

    <variable name="AlbumArtist2">
        <value condition="Container.Content(albums)">$INFO[ListItem.artist]</value>
    </variable>

    <variable name="DialogSelectArtwork">
        <value condition="!String.IsEmpty(Container(6).ListItem.Art(poster))">$INFO[Container(6).ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container(6).ListItem.Art(thumb))">$INFO[Container(6).ListItem.Art(thumb)]</value>
        <value>$INFO[Container(6).ListItem.Icon]</value>
    </variable>

    <variable name="ListMainLabelVar">
        <value condition="Container.Content(songs)">$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>

    <variable name="WidgetLandscapeLabelVar">
        <value condition="$EXP[isMovie] | $EXP[isTVShow]">$INFO[ListItem.Title]</value>
        <value condition="$EXP[isEpisode]">$INFO[ListItem.Season]x$VAR[EpsNumber] $INFO[ListItem.Title]</value>
    </variable>

    <variable name="DialogVideoInfoMainLabel">
        <value condition="$EXP[isMovie]">$INFO[ListItem.Title] $INFO[ListItem.Year,(,)]</value>
        <value condition="$EXP[isTVShow]">$INFO[ListItem.Title]</value>
        <value condition="$EXP[isEpisode]">$INFO[ListItem.season,,x]$VAR[EpsNumber] $INFO[ListItem.Title]</value>
    </variable>

    <variable name="MusicWallImageVar">
        <value condition="!String.IsEmpty(ListItem.thumb)">$INFO[ListItem.thumb]</value>
        <value condition="$EXP[isArtist]">DefaultActorSolid.png</value>
        <value condition="$EXP[isAlbum]">DefaultAlbumCover.png</value>
    </variable>

    <variable name="CastImage">
        <value condition="String.IsEmpty(ListItem.thumb)">DefaultActorSolid.png</value>
        <value>$INFO[ListItem.thumb]</value>
    </variable>

    <variable name="LandscapeImageVar">
        <value condition="$EXP[isEpisode] + Container.Content(episodes)">$INFO[Container.ListItem.thumb]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[Container.ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="ListItem.IsFolder + String.IsEmpty(ListItem.thumb)">DefaultFolder16_9.png</value>
        <value>$INFO[Container.ListItem.Thumb]</value>
    </variable>    
    
    <variable name="PosterImageVar">
        <value condition="ListItem.IsFolder + String.IsEmpty(ListItem.Art(poster))">DefaultFolder.png</value>
        <value>$INFO[Container.ListItem.Art(poster)]</value>
    </variable>

    <variable name="VolumeIconVar">
        <value condition="Player.Muted">&#xF374;</value>
        <value condition="Integer.IsGreater(Control.GetLabel(29999),50)">&#xF375;</value>
        <value>&#xF373;</value>
    </variable>

    <variable name="HWDecoder">
        <value condition="Player.Process(videohwdecoder)">HW</value>
        <value>SW</value>
    </variable>
    <variable name="VideoBitrate">
        <value condition="!String.IsEmpty(VideoPlayer.VideoBitrate)">$INFO[VideoPlayer.VideoBitrate] Kbps</value>
        <value>Unknown</value>
    </variable>
    <variable name="AudioBitrate">
        <value condition="!String.IsEmpty(VideoPlayer.AudioBitrate)">$INFO[VideoPlayer.AudioBitrate] kbps</value>
        <value>Unknown</value>
    </variable>

</includes>